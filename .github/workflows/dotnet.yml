name: .NET build and test
env:
  CURRENT_VERSION: 2.0.${{ github.run_number }}
  LAST_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: | 
          8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

  deployRelease:
    if: startsWith(github.ref, 'refs/heads/release')
    runs-on: ubuntu-latest
    needs: build 
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: | 
          8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: NugetPush
      env: 
          NUGET_TOKEN_EXISTS: ${{ secrets.NUGET_TOKEN }}
      if:  env.NUGET_TOKEN_EXISTS != ''
      run: |
          dotnet nuget push ./SkiaSharpCompare/bin/Release/*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_TOKEN}} --source https://api.nuget.org/v3/index.json
    - name: Github release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
      if:  env.GITHUB_TOKEN != ''
      run: |
          gh release create ${{env.CURRENT_VERSION}} ./SkiaSharpCompare/bin/Release/*.*nupkg --generate-notes

  deployTest:
    if: github.ref != 'refs/heads/release'
    runs-on: ubuntu-latest
    needs: build 
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: | 
          8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: NugetPush
      env:
          NUGET_TOKEN_EXISTS: ${{ secrets.NUGET_TEST_TOKEN }}
      if:  env.NUGET_TOKEN_EXISTS != ''
      run: |
          ls ./SkiaSharpCompare/bin/Release
          dotnet nuget push ./SkiaSharpCompare/bin/Release/*.nupkg --skip-duplicate --api-key ${{secrets.NUGET_TEST_TOKEN}} --source https://apiint.nugettest.org/v3/index.json
    - name: Github prerelease
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.TOKEN }}
      if:  env.GITHUB_TOKEN != ''
      run: |
          gh release create ${{env.CURRENT_VERSION}} ./SkiaSharpCompare/bin/Release/*.*nupkg --prerelease --generate-notes
